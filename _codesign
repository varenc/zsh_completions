#compdef codesign

_codesign() {
    local -a arguments
    arguments=(
        '-s[sign code]:identity:_files'
        '--sign[sign code]:identity:_files'
        '-v[increase verbosity or verify code]'
        '--verify[verify code]'
        '-d[display signature]'
        '--display[display signature]'
        '-h[display hosting paths]'
        '--hosting[display hosting paths]'
        '--validate-constraint[check supplied constraint plist]:path:_files'
        '--all-architectures[verify each architecture separately]'
        '-a[select Mach-O architecture]:architecture'
        '--architecture[select Mach-O architecture]:architecture'
        '--bundle-version[specify bundle version]:version-string'
        '--check-notarization[force online notarization check]'
        '--detached[use detached signature]:filename:_files'
        '--deep[sign/verify nested code recursively]'
        '--detached-database[write signature to system database]'
        '-f[force replacement of existing signature]'
        '--force[force replacement of existing signature]'
        '--generate-entitlement-der[embed entitlements as DER]'
        '--hosting[display hosting chain of running program]:pid'
        '-i[specify unique identifier]:identifier'
        '--identifier[specify unique identifier]:identifier'
        '-o[set option flags]:flags'
        '--options[set option flags]:flags'
        '-P[set code signing granularity]:pagesize'
        '--pagesize[set code signing granularity]:pagesize'
        '--remove-signature[remove current code signature]'
        '-r[embed internal requirements]:requirements:_files'
        '--requirements[embed internal requirements]:requirements:_files'
        '-R[test requirement]:requirement'
        '--test-requirement[test requirement]:requirement'
        '--continue[continue processing on failure]'
        '--dryrun[perform signing operations without writing result]'
        '--entitlements[embed entitlement data]:path:_files'
        '--enforce-constraint-validity[require valid constraints]'
        '--extract-certificates[extract certificates]:prefix:_files'
        '--file-list[write list of modified files]:path:_files'
        '--ignore-resources[do not validate resource contents]'
        '--keychain[search for identity in specified keychain]:filename:_files'
        '--prefix[prefix identifier if no dot present]:string'
        '--preserve-metadata[preserve certain metadata]:list'
        '--strict[apply additional validation restrictions]:options'
        '--timestamp[request timestamp authentication]:URL'
        '--runtime-version[specify hardened runtime version]:version'
        '--launch-constraint-self[embed launch constraint for self]:path:_files'
        '--launch-constraint-parent[embed launch constraint for parent]:path:_files'
        '--launch-constraint-responsible[embed launch constraint for responsible process]:path:_files'
        '--library-constraint[embed library load constraint]:path:_files'
        '--strip-disallowed-xattrs[strip disallowed xattrs]'
        '--single-threaded-signing[use one thread for resource seal]'
        '--validate-constraint[validate constraint plist structure]:path:_files'
        '--verbose[increase verbosity or verify code]'
        '--help[display help information]'
        '*:file or process:_files -g "+([0-9])"'  # <-- process selection doesn't autocomplete
    )
    _arguments -s $arguments
}

compdef _codesign codesign
